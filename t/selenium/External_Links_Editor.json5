{
  title: 'External Links Editor',
  commands: [
    {
      command: 'open',
      target: '/work/create',
      value: '',
    },
    // restrict link type options for URL
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://mainlynorfolk.info/',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('select.link-type > option')).map(x => x.innerText.trim()).toString()",
      value: ",lyrics page,other databases",
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[1]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    {
      command: 'open',
      target: '/artist/create',
      value: '',
    },
    // dismiss the beforeunload alert (shown since inputs were changed)
    {
      command: 'handleAlert',
      target: 'accept',
      value: '',
    },
    {
      command: 'waitUntilUrlIs',
      target: '/artist/create',
      value: '',
    },
    // automatic link type detection for URL
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://en.wikipedia.org/wiki/No_Age${KEY_ENTER}',
    },
    {
      command: 'assertElementPresent',
      target: 'css=#external-links-editor .wikipedia-favicon',
      value: '',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][1]//label[2]",
      value: 'Wikipedia',
    },
    // invalid URL detection
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'foo',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//div[contains(@class, 'error')]",
      value: 'Please enter a valid URL, such as “http://example.com/”.',
    },
    // Don't freeze to link when there's an error
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[2]",
      value: '',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll(\"input[type='url']\")).map(x => x.value).join('\\n')",
      value: 'foo\n',
    },
    // clear
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // MBS-11688
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '//example.com',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//div[contains(@class, 'error')]",
      value: 'Please enter a valid URL, such as “http://example.com/”.',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // shortened URL detection
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'http://goo.gl/example',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//div[contains(@class, 'error')]",
      value: 'Please don’t enter bundled/shortened URLs, enter the destination URL(s) instead.',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // deprecated and empty links do not appear at all
    {
      command: 'assertEval',
      target: 'document.querySelector(\'option[value="667"]\')',
      value: 'null',
    },
    // URLInputPopover tests
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '?oldformat=true',
    },
    // assert clean URL is displayed correctly
    {
      command: 'assertText',
      target: "xpath=//div[@id='url-input-popover']//a[contains(@class, 'clean-url')]",
      value: 'https://en.wikipedia.org/wiki/No_Age',
    },
    // assert raw URL is preserved
    {
      command: 'assertEval',
      target: "document.getElementsByClassName('raw-url')[0].value.trim()",
      value: 'https://en.wikipedia.org/wiki/No_Age?oldformat=true',
    },
    // Discard URL change by clicking 'Cancel'
    {
      command: 'click',
      target: "xpath=//div[@id='url-input-popover']//button[contains(@class, 'negative')]",
      value: '',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    // assert URL is unchanged
    {
      command: 'assertEval',
      target: "document.getElementsByClassName('raw-url')[0].value.trim()",
      value: 'https://en.wikipedia.org/wiki/No_Age',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '?oldformat=true',
    },
    // Test keeping changes when lost focus
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//span[contains(@class, 'favicon')])[1]",
      value: '',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    // assert changes are kept
    {
      command: 'assertEval',
      target: "document.getElementsByClassName('raw-url')[0].value.trim()",
      value: 'https://en.wikipedia.org/wiki/No_Age?oldformat=true',
    },
    // Close popover
    {
      command: 'click',
      target: "xpath=//div[@id='url-input-popover']//button[contains(@class, 'negative')]",
      value: '',
    },
    // assert clean URL is used
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//a[contains(@class, 'url')]",
      value: 'https://en.wikipedia.org/wiki/No_Age',
    },
    // Test grouping links by URL
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://link.example',
    },
    {
      command: 'select',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//select[contains(@class, 'link-type')]",
      value: 'label=regexp:\\s*official homepages',
    },
    // Add relationship by clicking button
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'add-relationship')][1]//button[contains(@class, 'add-item')]",
      value: '',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][3]//select[contains(@class, 'link-type')]",
      value: '',
    },
    {
      command: 'select',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][3]//select[contains(@class, 'link-type')]",
      value: 'label=regexp:\\s*fan pages',
    },
    // Add relationship by entering the same URL
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://link.example${KEY_ENTER}',
    },
    // Pressing enter submits the link
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      // Wikipedia link + current link(3 relationships)
      value: 'external-link-item\nrelationship-item\nexternal-link-item\nrelationship-item\nrelationship-item\nrelationship-item\nadd-relationship\nexternal-link-item',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('select.link-type')).map(x => x.value).join('\\n')",
      value: '183\n172\n',
    },
    {
      command: 'select',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][4]//select[contains(@class, 'link-type')]",
      value: 'label=regexp:\\s*biographies',
    },
    // Delete single relationship
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('select.link-type')).map(x => x.value).join('\\n')",
      value: '172\n182',
    },
    // Immediately appends new input box
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://link.example',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[2]",
      value: '',
    },
    // Pressing tab does not submit the link when it's a duplicate
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '${KEY_TAB}',
    },
    // Assert not merged
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll(\"input[type='url']\")).map(x => x.value).join('\\n')",
      value: 'https://link.example\n',
    },
    // Duplicate URL notice
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][3]//div[contains(@class, 'error')]",
      value: 'Note: This link already exists at position #2. To merge, press enter or select a type.',
    },
    // Don't merge while using arrow keys to select relationship type
    {
      command: 'sendKeys',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][4]//select[contains(@class, 'link-type')]",
      value: '${KEY_DOWN}',
    },
    // Assert not merged
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll(\"input[type='url']\")).map(x => x.value).join('\\n')",
      value: 'https://link.example\n',
    },
    // Automatically submitted after selecting a type and moving focus away from the type select
    {
      command: 'select',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][4]//select[contains(@class, 'link-type')]",
      value: 'label=regexp:\\s*interviews',
    },
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[2]",
      value: '',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      // Wikipedia link + current link(3 relationships)
      value: 'external-link-item\nrelationship-item\nexternal-link-item\nrelationship-item\nrelationship-item\nrelationship-item\nadd-relationship\nexternal-link-item',
    },
    // Delete link while entering
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://link.example',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][3]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // Assert link is deleted
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      // Wikipedia link + current link(3 relationships)
      value: 'external-link-item\nrelationship-item\nexternal-link-item\nrelationship-item\nrelationship-item\nrelationship-item\nadd-relationship\nexternal-link-item',
    },
    // Delete link with all relationships
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      // Wikipedia link + empty input box
      value: 'external-link-item\nrelationship-item\nexternal-link-item',
    },
    // Automatically delete empty URL
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://en.wikipedia.org/wiki/${KEY_ENTER}',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    // Empty input box and press enter to save
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '${KEY_HOME}${KEY_SHIFT}${KEY_END}${KEY_SHIFT}${KEY_BKSP}${KEY_ENTER}',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      value: 'external-link-item\nrelationship-item\nexternal-link-item',
    },
    // submit the artist
    {
      command: 'type',
      target: 'id=id-edit-artist.name',
      value: 'No Age',
    },
    {
      command: 'type',
      target: 'id=id-edit-artist.sort_name',
      value: 'No Age',
    },
    {
      command: 'clickAndWait',
      target: 'css=button.submit.positive',
      value: '',
    },
    // example link detection (MBS-11979)
    {
      command: 'clickAndWait',
      target: "xpath=//ul[@class='tabs']//a[descendant::text()='Edit']",
      value: '',
    },
    {
      command: 'type',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'http://example.com/',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//div[contains(@class, 'error')]",
      value: '“http://example.com/” is just an example. Please enter the actual link you want to add.',
    },
    // Google search link detection (MBS-12060)
    {
      command: 'type',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.google.com/search?q=good+music&oq=good+music&aqs=chrome..69i57j46i512j0i512l2j46i512j69i60l3.1930j0j7&sourceid=chrome&ie=UTF-8',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//div[contains(@class, 'error')]",
      value: 'Please don’t enter links to search results. If you’ve found any links through your search that seem useful, do enter those instead.',
    },
    // deprecated link type detection for existing links (MBS-8408)
    {
      command: 'type',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'http://musicmoz.org.example/Composition/Composers/M/Mozart,_Wolfgang_Amadeus/',
    },
    {
      command: 'select',
      target: 'css=select.link-type',
      value: 'label=regexp:\\s*MusicMoz',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//div[contains(@class, 'error')]",
      value: 'This relationship type is deprecated and should not be used.',
    },
    // relationshipCreate edit for external link is generated for existing release
    {
      command: 'open',
      target: '/release/24d4159a-99d9-425d-a7b8-1b9ec0261a33/edit',
      value: '',
    },
    // dismiss the beforeunload alert (shown since inputs were changed)
    {
      command: 'handleAlert',
      target: 'accept',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.discogs.com/David-Bowie--Blackstar/release/7949394${KEY_ENTER}',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.amazon.co.jp/Blackstar-David-Bowie/dp/B017VORJK6/${KEY_ENTER}',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')])[1]//a[contains(@class, 'rel-add')]",
      value: '',
    },
    {
      command: 'click',
      target: 'css=a[href="#edit-note"]',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-list')]//h2)[1]",
      value: 'Add relationship',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-details')])[1]",
      value: 'Relationship: ★ by David Bowie has a Discogs page at https://www.discogs.com/release/7949394 [info]',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-list')]//h2)[2]",
      value: 'Add relationship',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-details')])[2]",
      value: 'Relationship: ★ by David Bowie has Amazon ASIN https://www.amazon.co.jp/gp/product/B017VORJK6 [info]',
    },
    {
      command: 'clickAndWait',
      target: 'css=#enter-edit',
      value: '',
    },
    // relationshipEdit edit for external link is generated for existing release
    {
      command: 'clickAndWait',
      target: 'css=.tabs a[href$="/edit"]',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '${KEY_HOME}${KEY_SHIFT}${KEY_END}${KEY_SHIFT}https://www.gnu.org/licenses/gpl-3.0.en.html',
    },
    // Save URL change
    {
      command: 'click',
      target: "xpath=//div[@id='url-input-popover']//button[contains(@class, 'positive')]",
      value: '',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')])[2]//a[contains(@class, 'rel-edit')]",
      value: '',
    },
    {
      command: 'select',
      target: 'css=select.link-type',
      value: 'label=regexp:\\s*license',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')])[2]//div[contains(@class, 'rel-edit')]",
      value: '',
    },
    {
      command: 'click',
      target: 'css=a[href="#edit-note"]',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-list')]//h2)[1]",
      value: 'Edit relationship',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-details')])[1]",
      value: 'Relationship: ★ by David Bowie has a Discogs page at https://www.discogs.com/release/7949394 [info] ★ by David Bowie is licensed under https://www.gnu.org/licenses/gpl-3.0.en.html [info]',
    },
    {
      command: 'clickAndWait',
      target: 'css=#enter-edit',
      value: '',
    },
    {
      command: 'click',
      target: "xpath=//span[contains(@class, 'menu-header')][contains(text(), 'My Data')]",
      value: '',
    },
    {
      command: 'clickAndWait',
      target: "xpath=//ul[contains(@class, 'menu')]//a[contains(text(), 'My Open Edits')]",
      value: '',
    },
    {
      command: 'clickAndWait',
      target: "xpath=//a[contains(text(), 'Accept edit')][1]",
      value: '',
    },
    // relationshipDelete edit for external link is generated for existing release
    {
      command: 'open',
      target: '/release/24d4159a-99d9-425d-a7b8-1b9ec0261a33/edit',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // show removed highlights
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')])[1]//a[contains(@class, 'rel-remove')]",
      value: '',
    },
    {
      command: 'assertElementPresent',
      target: "xpath=(//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')])[1]//div[contains(@class, 'rel-remove')]",
      value: '',
    },
    // cancel removal by clicking again
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    {
      command: 'assertEval',
      target: "document.querySelector('#external-links-editor tr.external-link-item a.url').className",
      value: 'url ',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][1]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // check that edits are not generated for links that duplicate removed ones
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.amazon.co.jp/gp/product/B017VORJK6',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][3]//div[contains(@class, 'field-error')]",
      value: 'This relationship already exists.',
    },
    {
      command: 'click',
      target: 'css=a[href="#edit-note"]',
      value: '',
    },
    {
      command: 'assertEval',
      target: "window.document.getElementById('enter-edit').disabled",
      value: 'true',
    },
    {
      command: 'click',
      target: 'css=a[href="#information"]',
      value: '',
    },
    // duplicate the first URL again by editing the other existing URL
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][3]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '${KEY_HOME}${KEY_SHIFT}${KEY_END}${KEY_SHIFT}https://www.amazon.co.jp/gp/product/B017VORJK6',
    },
    // Save URL change
    {
      command: 'click',
      target: "xpath=//div[@id='url-input-popover']//button[contains(@class, 'positive')]",
      value: '',
    },
    {
      command: 'select',
      target: 'css=select.link-type',
      value: 'label=regexp:\\s*ASIN',
    },
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//div[contains(@class, 'field-error')]",
      value: 'This relationship already exists.',
    },
    // revert above edit
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//div[@id='url-input-popover']//input[contains(@class, 'raw-url')])[1]",
      value: '${KEY_HOME}${KEY_SHIFT}${KEY_END}${KEY_SHIFT}https://www.gnu.org/licenses/gpl-3.0.en.html',
    },
    // Save URL change
    {
      command: 'click',
      target: "xpath=//div[@id='url-input-popover']//button[contains(@class, 'positive')]",
      value: '',
    },
    {
      command: 'select',
      target: 'css=select.link-type',
      value: 'label=regexp:\\s*license',
    },
    // assert that there's now only one remove edit and submit
    {
      command: 'click',
      target: 'css=a[href="#edit-note"]',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'assertEval',
      target: "window.document.getElementsByClassName('edit-list').length",
      value: '1',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-list')]//h2)[1]",
      value: 'Remove relationship',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-details')])[1]",
      value: 'Relationship: ★ by David Bowie has Amazon ASIN JP: B017VORJK6 [info]',
    },
    {
      command: 'clickAndWait',
      target: 'css=#enter-edit',
      value: '',
    },
    // accept the edit and check that the removal succeeded
    {
      command: 'click',
      target: "xpath=//span[contains(@class, 'menu-header')][contains(text(), 'My Data')]",
      value: '',
    },
    {
      command: 'clickAndWait',
      target: "xpath=//ul[contains(@class, 'menu')]//a[contains(text(), 'My Open Edits')]",
      value: '',
    },
    {
      command: 'clickAndWait',
      target: "xpath=//a[contains(text(), 'Accept edit')][1]",
      value: '',
    },
    {
      command: 'open',
      target: '/release/24d4159a-99d9-425d-a7b8-1b9ec0261a33/edit',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'assertEval',
      target: "window.JSON.stringify(window.Array.from(window.document.querySelectorAll('#external-links-editor a.url').values()).map(function (x) { return x.href }))",
      value: '["https://www.gnu.org/licenses/gpl-3.0.en.html"]',
    },
    // Set begin date & end date
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.amazon.co.jp/gp/product/B017VORJK6${KEY_ENTER}',
    },
    // Open popover
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//button[contains(@class, 'edit-item')]",
      value: '',
    },
    // begin date: ????-01-01
    {
      command: 'sendKeys',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.begin_date.month']",
      value: '1',
    },
    {
      command: 'sendKeys',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.begin_date.day']",
      value: '1',
    },
    // end date: 2021-01-01
    {
      command: 'sendKeys',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.end_date.year']",
      value: '2021',
    },
    {
      command: 'sendKeys',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.end_date.month']",
      value: '1',
    },
    {
      command: 'sendKeys',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.end_date.day']",
      value: '1',
    },
    // Mark as ended
    {
      command: 'click',
      target: "xpath=//div[@id='external-link-attribute-dialog']//input[@id='id-period.ended']",
      value: '',
    },
    // Save
    {
      command: 'click',
      target: "xpath=(//div[@id='external-link-attribute-dialog']//button[contains(@class, 'positive')])[1]",
      value: '',
    },
    // Assert date period is correctly displayed
    {
      command: 'assertText',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'relationship-item')][2]//span[contains(@class, 'date-period')][1]",
      value: ' (????-01-01 – 2021-01-01)',
    },
    // Check edit preview
    {
      command: 'click',
      target: 'css=a[href="#edit-note"]',
      value: '',
    },
    {
      command: 'pause',
      target: '1500',
      value: '',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-list')]//h2)[1]",
      value: 'Add relationship',
    },
    {
      command: 'assertText',
      target: "xpath=(//div[contains(@class, 'edit-details')])[1]",
      value: 'Relationship: ★ by David Bowie has Amazon ASIN https://www.amazon.co.jp/gp/product/B017VORJK6 [info] from ????-01-01 until 2021-01-01',
    },
    // Revert changes
    {
      command: 'click',
      target: 'css=a[href="#information"]',
      value: '',
    },
    {
      command: 'click',
      target: "xpath=//table[@id='external-links-editor']//tr[contains(@class, 'external-link-item')][2]//button[contains(@class, 'remove-item')]",
      value: '',
    },
    // Test auto-selection of multiple relationships
    {
      command: 'open',
      target: '/release/add',
      value: '',
    },
    {
      command: 'click',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: '',
    },
    {
      command: 'sendKeys',
      target: "xpath=(//table[@id='external-links-editor']//input[@type='url'])[1]",
      value: 'https://www.jamendo.com/${KEY_ENTER}',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor tr')).map(x => x.className).join('\\n')",
      value: 'external-link-item\nrelationship-item\nrelationship-item\nexternal-link-item',
    },
    {
      command: 'assertEval',
      target: "Array.from(document.querySelectorAll('#external-links-editor label.relationship-name')).map(x => x.innerText).sort().toString()",
      value: 'download for free,stream for free',
    },
    {
      command: 'open',
      target: '/',
      value: '',
    },
    {
      command: 'handleAlert',
      target: 'accept',
      value: '',
    },
  ],
}
