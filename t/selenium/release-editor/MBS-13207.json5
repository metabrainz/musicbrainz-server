{
  title: 'MBS-13207',
  commands: [
    {
      command: 'open',
      target: '/static/scripts/tests/release-editor/seeds/mbs-13207.html',
      value: '',
    },
    {
      command: 'clickAndWait',
      target: 'css=button[type=submit]',
      value: '',
    },
    {
      command: 'pause',
      target: '500',
      value: '',
    },
    {
      command: 'click',
      target: 'css=a[href="#recordings"]',
      value: '',
    },
    {
      command: 'click',
      target: 'css=button.edit-track-recording',
      value: '',
    },
    {
      command: 'pause',
      target: '1000',
      value: '',
    },
    // Check that there's a radio button for at least one existing recording
    // in addition to the "Add a new recording" button -- if there's only one
    // button, then we can't verify the fix.
    {
      command: 'assertEval',
      target: 'document.querySelectorAll("#recording-assoc-bubble input[name=recording-selection]").length > 1',
      value: 'true',
    },
    {
      command: 'sendKeys',
      target: 'css=:focus',
      value: '${KEY_TAB}',
    },
    // The "Add a new recording" radio button should receive the focus.
    {
      command: 'assertEval',
      target: 'document.activeElement === document.getElementById("add-new-recording")',
      value: 'true',
    },
    // The down key should move the focus to the next radio button.
    {
      command: 'sendKeys',
      target: 'css=:focus',
      value: '${KEY_DOWN}',
    },
    // The suggested recording's radio button should receive the focus.
    {
      command: 'assertEval',
      target: 'document.activeElement === document.querySelectorAll("#recording-assoc-bubble input[name=recording-selection]")[1]',
      value: 'true',
    },
    // It should also be selected.
    {
      command: 'assertEval',
      target: 'document.querySelectorAll("#recording-assoc-bubble input[name=recording-selection]")[1].checked',
      value: 'true',
    },
    {
      command: 'open',
      target: '/',
      value: '',
    },
    {
      command: 'handleAlert',
      target: 'accept',
      value: '',
    },
    {
      command: 'waitUntilUrlIs',
      target: '/',
      value: '',
    },
  ],
}
