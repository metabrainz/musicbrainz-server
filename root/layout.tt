[% set_header() %]
    [%- DEFAULT no_icons = homepage -%]
    [%- React.embed(c, 'layout/components/Head', {
            isHomepage => homepage,
            noIcons => boolean_to_json(no_icons),
            pager => React.serialize_pager(pager),
            title => title,
        })
    -%]
    <body>
        [%- React.embed(c, 'layout/components/Header') -%]

        [%- IF c.user.l_restrictions.size -%]
            <div class="banner editing-disabled">
                <p>
                    [% l('An admin has set the following restrictions on your account: {list}.
                          If you havenâ€™t already been contacted about why, please {uri|send us a message}.',
                         {
                            list => comma_only_list(c.user.l_restrictions),
                            uri => {href => 'https://metabrainz.org/contact', target => '_blank'},
                         },
                    ) %]
                </p>
            </div>
        [%- END -%]

        [%- IF !c.req.cookies.server_details_dismissed_mtime.value -%]
            [% IF server_details.staging_server %]
                <div class="banner server-details">
                    <p>
                        [%~ IF server_details.staging_server_description;
                                server_details.staging_server_description;
                            ELSIF server_details.is_beta;
                                l('This beta test server allows testing of new features with the live database.');
                            ELSE;
                                l('This is a MusicBrainz development server.');
                            END
                        =%]
                        [%= l('{uri|Return to musicbrainz.org}.',
                              { uri => main_server_url }) ~%]
                    </p>
                    [% dismiss_banner_button('server_details') %]
                </div>
            [% ELSIF server_details.is_mirror_db %]
                <div class="banner server-details">
                    <p>
                        [% l('This is a MusicBrainz mirror server. To edit or make changes to the data, please {uri|return to musicbrainz.org}.', { uri => c.req.uri.replace('//.*?/','//musicbrainz.org/') }) %]
                    </p>
                    [% dismiss_banner_button('server_details') %]
                </div>
            [% END %]
        [%- END -%]

        [%- IF server_details.alert && server_details.alert_mtime > (c.req.cookies.alert_dismissed_mtime.value || 0) -%]
            <div class="banner alert">
                <p>[% server_details.alert %]</p>
                [% dismiss_banner_button('alert') %]
            </div>
        [%- END -%]

        [%- IF server_details.read_only -%]
            <div class="banner server-details">
                <p>
                    [% l('The server is temporarily in read-only mode for database maintenance.') %]
                </p>
            </div>
        [%- END -%]

        [%- IF new_edit_notes &&
               new_edit_notes_mtime > (c.req.cookies.new_edit_notes_dismissed_mtime.value || 0) &&
               ((c.user && (c.user.is_beginner || !c.user.has_confirmed_email_address)) ||
                (c.req.cookies.alert_new_edit_notes.value || 'true') != 'false') -%]
            <div class="banner new-edit-notes">
                <p>
                    [% l('{link|New notes} have been left on some of your edits. Please make sure to read them and respond if necessary.',
                         {link => c.uri_for_action('/edit/notes_received')}) %]
                </p>
                [% dismiss_banner_button('new_edit_notes') %]
            </div>
        [%- END -%]

        [% IF makes_no_changes %]
        <div class="banner warning-header">
            <p>[% l('The data you have submitted does not make any changes to the data already present.') %]</p>
        </div>
        [% END %]

        [% IF overlong_string %]
        <div class="banner warning-header">
            <p>[% l('Some text you entered is overlong! Please shorten it,
                     and if necessary enter the full text in the annotation for reference.') %]</p>
        </div>
        [% END %]

        [% IF c.sessionid.defined AND c.flash.message %]
            <div class="banner flash">
                <p>
                    [% c.flash.message %]
                </p>
            </div>
        [% END %]

        <div id="page"[% IF full_width %] class="fullwidth"[% END %][% IF homepage %] class="homepage"[% END %]>
            [%- content -%]
        </div>

        [%- IF c.try_get_session('merger') AND !hide_merge_helper -%]
            [% React.embed(c, 'layout/components/MergeHelper', {merger => React.to_json_object(merger)}) %]
        [%- END -%]

        <div id="footer">
            <p class="left" id="footer-menu">
                <a href="https://metabrainz.org/donate" class="internal">[% l('Donate') %]</a>
                <a href="//wiki.musicbrainz.org/" class="internal">[% l('Wiki') %]</a>
                <a href="https://community.metabrainz.org/" class="internal">[% l('Forums') %]</a>
                <a href="/doc/Communication/ChatBrainz" class="internal">[% l('Chat') %]</a>
                <a href="https://tickets.metabrainz.org/" class="internal">[% l('Bug tracker') %]</a>
                <a href="https://blog.metabrainz.org/" class="internal">[% l('Blog') %]</a>
                <a href="https://mastodon.social/@MusicBrainz" class="internal">[% l('Mastodon') %]</a>
                <a href="https://bsky.app/profile/musicbrainz.org" class="internal">[% l('Bluesky') %]</a>
                [%- IF server_details.beta_redirect %]
                <a href="[% c.uri_for('/set-beta-preference', {returnto => c.relative_uri}) %]" class="internal">[% server_details.is_beta ? l('Stop using beta site') : l('Use beta site') %]</a>
                [%- END -%]
            </p>

            <p class="right">
                [% l('Brought to you by {MeB|MetaBrainz Foundation} and our {spon|sponsors} and {supp|supporters}.',
                    { MeB  => 'https://metabrainz.org/',
                      spon => 'https://metabrainz.org/sponsors',
                      supp => 'https://metabrainz.org/supporters' }) %]
                [% IF server_details.git.branch ~%]
                <br/>
                    [%~ l('Running: <span class="tooltip" title="{msg}">{branch} ({sha})</span>',
                         { branch => server_details.git.branch,
                           msg => html_escape(server_details.git.msg),
                           sha => server_details.git.sha }) ~%]
                    [% IF server_details.is_beta =%]
                        [%= l('See {tickets|all tickets in beta testing}.',
                            { tickets => 'https://tickets.metabrainz.org/issues/?filter=10715' }) ~%]
                    [%~ END %]
                [%~ END %]
                [%- IF last_replication_date -%]
                <br />
                [% l('Last replication packet received at {datetime}',
                     { datetime => UserDate.format(last_replication_date) }) %]
                [%- END -%]
            </p>
        </div>

        [%- script_manifest('common/banner.js', {async => 'async'}) -%]
    </body>
</html>
