FROM phusion/baseimage:focal-1.0.0-alpha1-amd64

RUN useradd --create-home --shell /bin/bash musicbrainz

WORKDIR /home/musicbrainz

COPY docker/pgdg_pubkey.txt docker/yarn_pubkey.txt ./

RUN apt-get update && \
    apt-get install \
        --no-install-recommends \
        --no-install-suggests \
        -y \
        ca-certificates \
        curl \
        gnupg && \
    apt-key add pgdg_pubkey.txt && \
    apt-key add yarn_pubkey.txt && \
    rm pgdg_pubkey.txt yarn_pubkey.txt && \
    apt-key adv --keyserver keyserver.ubuntu.com --refresh-keys 'Yarn' && \
    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    curl -sLO https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
    curl -sLO https://deb.nodesource.com/node_16.x/pool/main/n/nodejs/nodejs_16.1.0-deb-1nodesource1_amd64.deb && \
    apt-get update && \
    apt-get install \
        --no-install-recommends \
        --no-install-suggests \
        -y \
        ./google-chrome-stable_current_amd64.deb \
        ./nodejs_16.1.0-deb-1nodesource1_amd64.deb \
        build-essential \
        bzip2 \
        gcc \
        gettext \
        git \
        language-pack-de \
        language-pack-el \
        language-pack-es \
        language-pack-et \
        language-pack-fi \
        language-pack-fr \
        language-pack-it \
        language-pack-ja \
        language-pack-nl \
        language-pack-sq \
        libc6-dev \
        libdb-dev \
        libdb5.3 \
        libexpat1 \
        libexpat1-dev \
        libicu-dev \
        libicu66 \
        libperl-dev \
        libpq-dev \
        libpq5 \
        libssl-dev \
        libssl1.1 \
        libxml2 \
        libxml2-dev \
        locales \
        lsof \
        make \
        maven \
        openjdk-8-jdk \
        openjdk-8-jre \
        openssh-client \
        perl \
        pkg-config \
        postgresql-12 \
        postgresql-12-pgtap \
        postgresql-server-dev-12 \
        python2 \
        python2-dev \
        rabbitmq-server \
        redis-server \
        runit \
        runit-systemd \
        software-properties-common \
        sudo \
        unzip \
        virtualenv \
        wget \
        yarn \
        zlib1g-dev && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt install \
        --no-install-recommends \
        --no-install-suggests \
        -y \
        python3.9 \
        python3.9-dev \
        python3.9-distutils \
        python3.9-venv && \
    rm -rf /var/lib/apt/lists/* && \
    rm google-chrome-stable_current_amd64.deb && \
    rm nodejs_16.1.0-deb-1nodesource1_amd64.deb && \
    update-java-alternatives -s java-1.8.0-openjdk-amd64 && \
    systemctl disable rabbitmq-server

RUN wget -q -O - https://cpanmin.us | perl - App::cpanminus && \
    cpanm Carton JSON::XS && \
    rm -rf /root/.cpanm

ENV PERL_CARTON_PATH="/home/musicbrainz/carton-local" \
    PERL_CPANM_OPT="--notest --no-interactive"

COPY --chown=musicbrainz:musicbrainz cpanfile cpanfile.snapshot ./
RUN sudo -E -H -u musicbrainz carton install --deployment && \
    rm cpanfile cpanfile.snapshot

RUN mkdir musicbrainz-server
ENV PG_AMQP_COMMIT 240d477

RUN git clone --depth 1 https://github.com/omniti-labs/pg_amqp.git && \
    cd pg_amqp && \
    git reset --hard $PG_AMQP_COMMIT && \
    make && \
    make install && \
    cd /home/musicbrainz

ENV SOLR_VERSION 7.7.3
ENV SOLR_HOME /opt/solr/server/solr

RUN curl -sLO http://archive.apache.org/dist/lucene/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz && \
    tar xzf solr-$SOLR_VERSION.tgz solr-$SOLR_VERSION/bin/install_solr_service.sh --strip-components=2 && \
    ./install_solr_service.sh solr-$SOLR_VERSION.tgz && \
    systemctl disable solr

ENV MB_SOLR_TAG v3.4.1

# Steps taken from https://github.com/metabrainz/mb-solr/blob/master/Dockerfile
RUN sudo -E -H -u musicbrainz git clone --branch $MB_SOLR_TAG --depth 1 --recursive https://github.com/metabrainz/mb-solr.git && \
    cd mb-solr/mmd-schema/brainz-mmd2-jaxb && \
    mvn install && \
    cd ../../mb-solr && \
    mvn package -DskipTests && \
    mkdir -p /opt/solr/lib $SOLR_HOME && \
    cp target/mb-solr-0.0.1-SNAPSHOT-jar-with-dependencies.jar /opt/solr/lib/ && \
    cd .. && \
    cp -R mbsssss $SOLR_HOME/mycores/ && \
    sed -i'' 's|</solr>|<str name="sharedLib">/opt/solr/lib</str></solr>|' $SOLR_HOME/solr.xml && \
    mkdir $SOLR_HOME/data && \
    chown -R solr:solr /opt/solr/ && \
    cd /home/musicbrainz

ENV SIR_COMMIT 0d137b9

RUN sudo -E -H -u musicbrainz git clone https://github.com/metabrainz/sir.git && \
    cd sir && \
    sudo -E -H -u musicbrainz git reset --hard $SIR_COMMIT && \
    sudo -E -H -u musicbrainz sh -c 'virtualenv --python=python2 venv; . venv/bin/activate; pip install -r requirements.txt; pip install git+git://github.com/esnme/ultrajson.git@7d0f4fb7e911120fd09075049233b587936b0a65' && \
    cd /home/musicbrainz

ENV ARTWORK_INDEXER_COMMIT c8731b5

RUN sudo -E -H -u musicbrainz git clone https://github.com/metabrainz/artwork-indexer.git && \
    cd artwork-indexer && \
    sudo -E -H -u musicbrainz git reset --hard $ARTWORK_INDEXER_COMMIT && \
    sudo -E -H -u musicbrainz sh -c 'python3.9 -m venv venv; . venv/bin/activate; pip install -r requirements.txt' && \
    cd /home/musicbrainz

ENV ARTWORK_REDIRECT_COMMIT origin/eaa

RUN sudo -E -H -u musicbrainz git clone https://github.com/metabrainz/artwork-redirect.git && \
    cd artwork-redirect && \
    sudo -E -H -u musicbrainz git reset --hard $ARTWORK_REDIRECT_COMMIT && \
    sudo -E -H -u musicbrainz sh -c 'python3.9 -m venv venv; . venv/bin/activate; pip install -r requirements.txt' && \
    cd /home/musicbrainz

RUN curl -sLO https://chromedriver.storage.googleapis.com/90.0.4430.24/chromedriver_linux64.zip && \
    unzip chromedriver_linux64.zip -d /usr/local/bin && \
    chmod +x /usr/local/bin/chromedriver && \
    rm chromedriver_linux64.zip

RUN curl -sLO https://github.com/validator/validator/releases/download/18.11.5/vnu.jar_18.11.5.zip && \
    unzip -d vnu -j vnu.jar_18.11.5.zip && \
    rm vnu.jar_18.11.5.zip

RUN echo 'en_US.UTF-8 UTF-8' > /etc/locale.gen && \
    locale-gen

ENV PGDATA /home/musicbrainz/pgdata

RUN mkdir -p "$PGDATA" && \
    chown postgres:postgres "$PGDATA" && \
    chmod 700 "$PGDATA" && \
    sudo -u postgres /usr/lib/postgresql/12/bin/initdb \
        --data-checksums \
        --encoding utf8 \
        --locale en_US.UTF8 \
        --username postgres \
        --pgdata "$PGDATA"

COPY --chown=postgres:postgres \
    docker/musicbrainz-tests/pg_hba.conf \
    docker/musicbrainz-tests/postgresql.conf \
    $PGDATA/

RUN sudo -E -H -u postgres touch \
    $PGDATA/pg_ident.conf

COPY docker/musicbrainz-tests/artwork-indexer-config.ini artwork-indexer/config.ini
COPY docker/musicbrainz-tests/artwork-redirect-config.ini artwork-redirect/config.ini
COPY docker/musicbrainz-tests/sir-config.ini sir/config.ini

COPY \
    docker/musicbrainz-tests/artwork-indexer.service \
    /etc/service/artwork-indexer/run
COPY \
    docker/musicbrainz-tests/artwork-redirect.service \
    /etc/service/artwork-redirect/run
COPY \
    docker/musicbrainz-tests/chrome.service \
    /etc/service/chrome/run
COPY \
    docker/musicbrainz-tests/postgresql.service \
    /etc/service/postgresql/run
COPY \
    docker/musicbrainz-tests/redis.service \
    /etc/service/redis/run
COPY \
    docker/musicbrainz-tests/sir-queue-purger.service \
    /etc/service/sir-queue-purger/run
COPY \
    docker/musicbrainz-tests/solr.service \
    /etc/service/solr/run
COPY \
    docker/musicbrainz-tests/ssssss.service \
    /etc/service/ssssss/run
COPY \
    docker/scripts/start_template_renderer.sh \
    /etc/service/template-renderer/run
COPY \
    docker/musicbrainz-tests/vnu.service \
    /etc/service/vnu/run
COPY \
    docker/musicbrainz-tests/website.service \
    /etc/service/website/run
RUN chmod 755 \
        /etc/service/artwork-indexer/run \
        /etc/service/artwork-redirect/run \
        /etc/service/chrome/run \
        /etc/service/postgresql/run \
        /etc/service/redis/run \
        /etc/service/sir-queue-purger/run \
        /etc/service/solr/run \
        /etc/service/ssssss/run \
        /etc/service/template-renderer/run \
        /etc/service/vnu/run \
        /etc/service/website/run
RUN touch \
    /etc/service/artwork-indexer/down \
    /etc/service/artwork-redirect/down \
    /etc/service/chrome/down \
    /etc/service/postgresql/down \
    /etc/service/redis/down \
    /etc/service/sir-queue-purger/down \
    /etc/service/solr/down \
    /etc/service/ssssss/down \
    /etc/service/template-renderer/down \
    /etc/service/vnu/down \
    /etc/service/website/down

COPY docker/scripts/install_svlogd_services.sh /usr/local/bin
RUN chmod +x /usr/local/bin/install_svlogd_services.sh && \
    install_svlogd_services.sh \
        artwork-indexer \
        artwork-redirect \
        chrome \
        postgresql \
        redis \
        sir-queue-purger \
        solr \
        ssssss \
        template-renderer \
        vnu \
        website && \
    rm /usr/local/bin/install_svlogd_services.sh

LABEL com.circleci.preserve-entrypoint=true
