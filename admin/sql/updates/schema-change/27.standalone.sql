-- Generated by CompileSchemaScripts.pl from:
-- 20210702-mbs-11760.sql
-- 20210916-mbs-11896.sql
-- 20210924-mbs-10327.sql
-- 20211008-mbs-11903.sql
\\set ON_ERROR_STOP 1
BEGIN;
SET search_path = musicbrainz, public;
SET LOCAL statement_timeout = 0;
--------------------------------------------------------------------------------
SELECT '20210702-mbs-11760.sql';


CREATE CONSTRAINT TRIGGER delete_unused_tag
AFTER DELETE ON event_tag DEFERRABLE INITIALLY DEFERRED
FOR EACH ROW EXECUTE PROCEDURE trg_delete_unused_tag_ref();

CREATE CONSTRAINT TRIGGER delete_unused_tag
AFTER DELETE ON place_tag DEFERRABLE INITIALLY DEFERRED
FOR EACH ROW EXECUTE PROCEDURE trg_delete_unused_tag_ref();

CREATE CONSTRAINT TRIGGER delete_unused_tag
AFTER DELETE ON recording_tag DEFERRABLE INITIALLY DEFERRED
FOR EACH ROW EXECUTE PROCEDURE trg_delete_unused_tag_ref();

CREATE CONSTRAINT TRIGGER delete_unused_tag
AFTER DELETE ON release_tag DEFERRABLE INITIALLY DEFERRED
FOR EACH ROW EXECUTE PROCEDURE trg_delete_unused_tag_ref();

--------------------------------------------------------------------------------
SELECT '20210916-mbs-11896.sql';


DROP TRIGGER IF EXISTS unique_primary_for_locale ON area_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON artist_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON event_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON genre_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON instrument_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON label_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON place_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON recording_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON release_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON release_group_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON series_alias;
DROP TRIGGER IF EXISTS unique_primary_for_locale ON work_alias;

DROP FUNCTION IF EXISTS unique_primary_area_alias();
DROP FUNCTION IF EXISTS unique_primary_artist_alias();
DROP FUNCTION IF EXISTS unique_primary_event_alias();
DROP FUNCTION IF EXISTS unique_primary_genre_alias();
DROP FUNCTION IF EXISTS unique_primary_instrument_alias();
DROP FUNCTION IF EXISTS unique_primary_label_alias();
DROP FUNCTION IF EXISTS unique_primary_place_alias();
DROP FUNCTION IF EXISTS unique_primary_recording_alias();
DROP FUNCTION IF EXISTS unique_primary_release_alias();
DROP FUNCTION IF EXISTS unique_primary_release_group_alias();
DROP FUNCTION IF EXISTS unique_primary_series_alias();
DROP FUNCTION IF EXISTS unique_primary_work_alias();

--------------------------------------------------------------------------------
SELECT '20210924-mbs-10327.sql';


CREATE OR REPLACE FUNCTION del_collection_sub_on_private()
RETURNS trigger AS $$
  BEGIN
    IF NEW.public = FALSE AND OLD.public = TRUE THEN
      UPDATE editor_subscribe_collection sub
         SET available = FALSE,
             last_seen_name = OLD.name
       WHERE sub.collection = OLD.id
         AND sub.editor != NEW.editor
         AND sub.editor NOT IN (SELECT ecc.editor
                                  FROM editor_collection_collaborator ecc
                                 WHERE ecc.collection = sub.collection);
    END IF;

    RETURN NEW;
  END;
$$ LANGUAGE 'plpgsql';

--------------------------------------------------------------------------------
SELECT '20211008-mbs-11903.sql';


CREATE OR REPLACE FUNCTION restore_collection_sub_on_public()
RETURNS trigger AS $$
  BEGIN
    IF NEW.public = TRUE AND OLD.public = FALSE THEN
      UPDATE editor_subscribe_collection sub
         SET available = TRUE,
             last_seen_name = NEW.name
       WHERE sub.collection = OLD.id
         AND sub.available = FALSE;
    END IF;

    RETURN NULL;
  END;
$$ LANGUAGE 'plpgsql';

-- Create triggers
CREATE TRIGGER restore_collection_sub_on_public AFTER UPDATE ON editor_collection
    FOR EACH ROW EXECUTE PROCEDURE restore_collection_sub_on_public();

COMMIT;
